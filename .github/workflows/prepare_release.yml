name: Prepare Release

on:
  workflow_dispatch:
    inputs:
      versionBumpLevel:
        description: 'Version bump level (patch, minor, major)'
        required: true
        type: choice
        default: 'patch'
        options:
        - patch
        - minor
        - major

jobs:
  build-and-release:
    if: github.ref == 'refs/heads/main'
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Link SwiftLint or install it
        run: brew link --overwrite swiftlint || brew install swiftlint

      - name: Set up XCode 
        run: sudo xcode-select --switch /Applications/Xcode_15.0.app

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3'

      - name: Bump version
        run: ruby ./scripts/bump_versions.rb ${{ github.event.inputs.versionBumpLevel }}

      - name: Build XCFramework
        run: ./scripts/build_framework.sh

      - name: Get new version
        id: version
        run: echo "VERSION=$(ruby -e 'puts File.read("./IONGeolocationLib.podspec").match(/spec.version.*=.*''(\d+\.\d+\.\d+)''/)[1]')" >> $GITHUB_ENV

      - name: Create new branch
        run: |
          git switch --create "prepare-new-release-${{ env.VERSION }}"

      - name: Move zip file to root and push changes
        run: |
          if [ -f IONGeolocationLib.zip ]; then
            rm IONGeolocationLib.zip
          else
            echo "File does not exist."
          fi
          mv build/IONGeolocationLib.zip .
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add .
          git commit -m "chore: Bump version to ${{ env.VERSION }}"
          git push origin HEAD:prepare-new-release-${{ env.VERSION }}

      - name: Create pull request
        id: create_pr
        run: |
          gh pr create -B main -H prepare-new-release-${{ env.VERSION }} --title 'Prepare `main` to Release `${{ env.VERSION }}`' --body 'Bumps version to `${{ env.VERSION }}`.<br/>Creates an updated and ready-to-be-released `IONGeolocationLib.zip`.'
          PR_NUMBER=$(gh pr view --json number --jq '.number')
          echo "PR_NUMBER=${PR_NUMBER}" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Add label to the pull request
        run: |
          gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/${{ github.repository }}/issues/${{ env.PR_NUMBER }}/labels \
            -f "labels[]=release"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}